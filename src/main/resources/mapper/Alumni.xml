<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.itupo.iiv.dao.AlumniDao">
	<resultMap id="AlumniResultMap" type="io.itupo.iiv.domain.AlumniBean">
		<result property="id" column="id" />
		<result property="sector" column="sector" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="fileId" column="file_id" />
		<result property="userId" column="user_id" />
		<result property="writeDate" column="write_date" />
		<result property="views" column="views" />
		<result property="likes" column="likes" />
	</resultMap>

	<select id="readPostList" resultMap="AlumniResultMap">
    	SELECT alumni.id, sector, title, LEFT(content, 50) AS content, file_id AS filedId, user_id AS userId, write_date AS writeDate, views, likes, username
    	FROM alumni, user
    	WHERE alumni.user_id = user.id
    	ORDER BY id DESC
    </select>
    
    <select id="readPostById" resultType="io.itupo.iiv.domain.AlumniBean">
    	SELECT alumni.id, sector, title, content, file_id AS filedId, user_id AS userId, write_date AS writeDate, views, likes, username
    	FROM alumni, user
    	WHERE alumni.user_id = user.id
    	AND alumni.id = #{id}
    </select>
    
	<insert id="writePost" parameterType="io.itupo.iiv.domain.AlumniBean">
		INSERT INTO alumni (sector, title, content, file_id, user_id, write_date, views, likes) 
		VALUE (#{sector}, #{title}, #{content}, 0, #{userId}, NOW(), 0, 0)
	</insert>
	
	<update id="updatePost" parameterType="io.itupo.iiv.domain.AlumniBean">
		UPDATE alumni
		SET title = #{title}, content = #{content}, file_id = #{fileId}
		WHERE id = #{id}
	</update>
	
	<delete id="deletePostById" parameterType="int">
		DELETE 
		FROM alumni 
		WHERE id = #{id}
	</delete>
	
    <update id="addPostViews" parameterType="int">
		UPDATE alumni
		SET views = views + 1
		WHERE id = #{id}
	</update>
	
	<update id="addPostLikes" parameterType="io.itupo.iiv.dto.LikeDto">
		UPDATE alumni
		SET likes = likes + 1
		WHERE id = #{postId} AND user_id = #{userId}
	</update>
	
	<update id="removePostLikes" parameterType="io.itupo.iiv.dto.LikeDto">
		UPDATE alumni
		SET likes = likes - 1
		WHERE id = #{postId} AND user_id = #{userId}
	</update>
	
	<select id="sortingByLikes" resultMap="AlumniResultMap">
    	SELECT alumni.id, sector, title, LEFT(content, 50) AS content, file_id AS filedId, user_id AS userId, write_date AS writeDate, views, likes, username
    	FROM alumni, user
    	WHERE alumni.user_id = user.id
    	ORDER BY likes DESC
    </select>
    
    <select id="sortingByViews" resultMap="AlumniResultMap">
    	SELECT alumni.id, sector, title, LEFT(content, 50) AS content, file_id AS filedId, user_id AS userId, write_date AS writeDate, views, likes, username
    	FROM alumni, user
    	WHERE alumni.user_id = user.id
    	ORDER BY views DESC
    </select>
</mapper>
